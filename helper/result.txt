

=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/FinancialAppApplication.java ===
package com.financial.financial_app;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class FinancialAppApplication {

	public static void main(String[] args) {
		SpringApplication.run(FinancialAppApplication.class, args);
	}

}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/FinancialAppApplication.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/config/RabbitMQConfig.java ===
package com.financial.config;

import org.springframework.amqp.core.Queue;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class RabbitMQConfig {

    @Bean
    public Queue transactionQueue() {
        return new Queue("transactionQueue", false);
    }
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/config/RabbitMQConfig.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/config/RedisConfig.java ===
package com.financial.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;
import org.springframework.data.redis.core.RedisTemplate;

@Configuration
public class RedisConfig {

    @Bean
    public LettuceConnectionFactory redisConnectionFactory() {
        return new LettuceConnectionFactory("localhost", 6379);
    }

    @Bean
    public RedisTemplate<String, Object> redisTemplate() {
        RedisTemplate<String, Object> template = new RedisTemplate<>();
        template.setConnectionFactory(redisConnectionFactory());
        return template;
    }
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/config/RedisConfig.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/config/TransactionListener.java ===
package com.financial.config;

import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Component;

@Component
public class TransactionListener {

    @KafkaListener(topics = "transactionTopic", groupId = "financial-app-group")
    public void listen(String message) {
        System.out.println("Received Kafka message: " + message);
    }
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/config/TransactionListener.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/controller/UserController.java ===
package com.financial.controller;

import com.financial.entity.User;
import com.financial.service.UserService;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/users")
public class UserController {
    private final UserService userService;

    // Constructor manual
    public UserController(UserService userService) {
        this.userService = userService;
    }

    @PostMapping("/register")
    public ResponseEntity<User> register(@RequestBody User user) {
        return ResponseEntity.ok(userService.registerUser(user));
    }

    @GetMapping("/{username}")
    public ResponseEntity<User> getUser(@PathVariable String username) {
        return ResponseEntity.ok(userService.getUserByUsername(username));
    }
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/controller/UserController.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/dto/TransactionDTO.java ===
package com.financial.dto;

import lombok.Data;

@Data
public class TransactionDTO {
    private String sender;
    private String receiver;
    private Double amount;
    private String type;
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/dto/TransactionDTO.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/entity/User.java ===
package com.financial.entity;

import jakarta.persistence.*;
import lombok.Data;

@Entity
@Data
public class User {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(nullable = false, unique = true)
    private String username;

    @Column(nullable = false)
    private String password;

    @Column(nullable = false, unique = true)
    private String email;
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/entity/User.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/exception/GlobalExceptionHandler.java ===
package com.financial.exception;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

@RestControllerAdvice
public class GlobalExceptionHandler {

    @ExceptionHandler(RuntimeException.class)
    public ResponseEntity<String> handleRuntimeException(RuntimeException ex) {
        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(ex.getMessage());
    }
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/exception/GlobalExceptionHandler.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/repository/UserRepository.java ===
package com.financial.repository;

import com.financial.entity.User;
import org.springframework.data.jpa.repository.JpaRepository;

public interface UserRepository extends JpaRepository<User, Long> {
    User findByUsername(String username);
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/repository/UserRepository.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/service/UserService.java ===
package com.financial.service;

import com.financial.entity.User;
import com.financial.repository.UserRepository;
import org.springframework.stereotype.Service;

@Service
public class UserService {
    private final UserRepository userRepository;

    // Constructor manual
    public UserService(UserRepository userRepository) {
        this.userRepository = userRepository;
    }

    public User registerUser(User user) {
        return userRepository.save(user);
    }

    public User getUserByUsername(String username) {
        return userRepository.findByUsername(username);
    }
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/service/UserService.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/util/JwtUtil.java ===
package com.financial.util;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import org.springframework.stereotype.Component;

import java.util.Date;

@Component
public class JwtUtil {
    private static final String SECRET_KEY = "secretKeyExample";

    public String generateToken(String username) {
        return Jwts.builder()
                .setSubject(username)
                .setIssuedAt(new Date())
                .setExpiration(new Date(System.currentTimeMillis() + 3600000))
                .signWith(SignatureAlgorithm.HS256, SECRET_KEY)
                .compact();
    }
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/java/com/financial/financial_app/util/JwtUtil.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/resources/application.properties ===
spring.application.name=FinancialApp

# SERVER CONFIG
server.port=8080

# DATABASE CONFIG
spring.datasource.url=jdbc:mysql://localhost:3306/financial_db
spring.datasource.username=root
spring.datasource.password=yourpassword
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# REDIS CONFIG
spring.redis.host=localhost
spring.redis.port=6379

# RABBITMQ CONFIG
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# KAFKA CONFIG
spring.kafka.bootstrap-servers=localhost:9092

# JWT CONFIG
jwt.secret=secretKeyExample
jwt.expiration-ms=3600000

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-12/solution/financial-app/src/main/resources/application.properties ===
