

=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-15/solution/src/main/java/com/example/fintech_app/FintechAppApplication.java ===
package com.example.fintech_app;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class FintechAppApplication {

	public static void main(String[] args) {
		SpringApplication.run(FintechAppApplication.class, args);
	}

}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-15/solution/src/main/java/com/example/fintech_app/FintechAppApplication.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-15/solution/src/main/java/com/example/fintech_app/controller/TransactionController.java ===
package com.example.fintechapp.controller;

import com.example.fintechapp.model.Transaction;
import com.example.fintechapp.service.TransactionService;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/transactions")
public class TransactionController {

    private final TransactionService transactionService;

    public TransactionController(TransactionService transactionService) {
        this.transactionService = transactionService;
    }

    @GetMapping
    public ResponseEntity<List<Transaction>> getAllTransactions() {
        return ResponseEntity.ok(transactionService.getAllTransactions());
    }

    @PostMapping
    public ResponseEntity<Transaction> createTransaction(@RequestBody Transaction transaction) {
        return ResponseEntity.status(HttpStatus.CREATED).body(transactionService.createTransaction(transaction));
    }
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-15/solution/src/main/java/com/example/fintech_app/controller/TransactionController.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-15/solution/src/main/java/com/example/fintech_app/model/Transaction.java ===
package com.example.fintechapp.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;

@Entity
@Table(name = "transactions")
public class Transaction {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @NotNull
    private String type;

    @NotNull
    private Double amount;

    @NotNull
    private String accountNumber;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public Double getAmount() {
        return amount;
    }

    public void setAmount(Double amount) {
        this.amount = amount;
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-15/solution/src/main/java/com/example/fintech_app/model/Transaction.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-15/solution/src/main/java/com/example/fintech_app/repository/TransactionRepository.java ===
package com.example.fintechapp.repository;

import com.example.fintechapp.model.Transaction;
import org.springframework.data.jpa.repository.JpaRepository;

public interface TransactionRepository extends JpaRepository<Transaction, Long> {
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-15/solution/src/main/java/com/example/fintech_app/repository/TransactionRepository.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-15/solution/src/main/java/com/example/fintech_app/service/TransactionService.java ===
package com.example.fintechapp.service;

import com.example.fintechapp.model.Transaction;
import com.example.fintechapp.repository.TransactionRepository;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class TransactionService {

    private final TransactionRepository transactionRepository;

    public TransactionService(TransactionRepository transactionRepository) {
        this.transactionRepository = transactionRepository;
    }

    public List<Transaction> getAllTransactions() {
        return transactionRepository.findAll();
    }

    public Transaction createTransaction(Transaction transaction) {
        return transactionRepository.save(transaction);
    }
}

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-15/solution/src/main/java/com/example/fintech_app/service/TransactionService.java ===


=== Start of /Users/memberid/Documents/Alto/alto-java/sesi-15/solution/src/main/resources/application.properties ===
spring.application.name=FintechApp

# MySQL Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/fintech_db
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

=== End of /Users/memberid/Documents/Alto/alto-java/sesi-15/solution/src/main/resources/application.properties ===
